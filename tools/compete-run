#!/bin/bash

set -ueo pipefail
ulimit -c 0

src="$(readlink -f "$1")"
dest="${src%.cpp}.bin"
shift 1

compile() {
    if [ -z "${GXX:-}" ]; then
        local -a options
        read -ra options <<< "${COMPETE_GXX_OPTIONS:-}"
        g++ "${options[@]}" "$@"
    else
        ${GXX} "$@"
    fi
}

print() {
    local mode="$1"
    shift 1
    printf "\e[%sm%s\e[m" "${mode}" "$*" >&2
}
print_log() { print "2" "[*] $*"$'\n'; }
print_fail() { print "31;1" "[!] $*"$'\n'; }

if [ ! -f "${dest}" ] || [ "${src}" -nt "${dest}" ]; then
    print_log "compiling..."
    failed=""
    compile "${src}" -o "${dest}" || failed="1"
    if [ -n "${failed}" ]; then
        print_fail "compilation failed"
        exit 1
    fi
    print_log "compiled"
else
    print_log "compilation skipped"
fi

run() {
    name="$1"
    in_file="${2:-}"
    failed=""
    print "1" "[*] testing: "
    print "4;1" "${name}"$'\n'
    if [ -n "${in_file}" ]; then
        "${dest}" < "${in_file}" || failed="1"
    else
        "${dest}" || failed="1"
    fi
    if [ -n "${failed}" ]; then
        print_fail "execution failed"
    fi
}

if [ "$#" -ne 0 ]; then
    for in_file in "$@"; do
        run "${in_file}" "${in_file}"
    done
else
    run "stdin"
fi
